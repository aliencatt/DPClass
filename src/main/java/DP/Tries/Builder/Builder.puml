@startuml

class Burger
{

}
class VegBurger
{
}
class ChickenBurger
{
}

VegBurger --|> Burger : extends
ChickenBurger --|> Burger : extends

class ColdDrink
{

}
class Pepsi
{

}
class Coke
{

}

Pepsi --|> ColdDrink : extends
Coke --|> ColdDrink : extends

interface Packing
{

}
class Wrapper
{
}
class Bottle
{
}

Wrapper ..|> Packing : implements
Bottle ..|> Packing : implements
Burger --> Wrapper : uses
ColdDrink --> Bottle : uses

skinparam ClassAttributeIconSize 0
class Item{
+ name: string
+packing(): Packing
+price() : flaot
}
class Meal
{
- items : ArrayList<item>
+ addItem(Item item) : void
+ getCost() : float
+ showItems() : void
}

class MealBuilder
{
+ prepareVegMeal() : Meal
+ prepareNonVegMeal() : Meal
}

class BuilderPatternDemo
{
<b>public main()</b>
}

BuilderPatternDemo --> MealBuilder : asks
MealBuilder --> Meal : builds
Meal --> Item : uses
Burger ..|> Item : implements
ColdDrink ..|> Item : implements

@enduml